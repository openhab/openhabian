##################################
# openHABian NGINX Configuration #
##################################


## Forward proxy
## Configure <server>:8888 as a manual (forward) proxy in your browser
## Access any local device in a *remote* (Tailscale VPN) location by target IP

server {
    listen       8888;

    location / {
        #resolver 100.100.100.100;           # use default Tailscale nameserver
        proxy_pass https://$http_host$request_uri;
    }
}


## Redirection
#REDIR server {
#REDIR   listen                          80;
#REDIR   server_name                     DOMAINNAME;
#REDIR   return 301                      https://$server_name$request_uri;
#REDIR }

## Reverse Proxy to openHAB
server {
    listen                          80;
#SSL   listen                          443 ssl;
    server_name                     DOMAINNAME;
#SSL   add_header                      Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Cross-Origin Resource Sharing.
    add_header 'Access-Control-Allow-Origin' '*' always; # make sure that also a 400 response works
    add_header 'Access-Control-Allow_Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
#AUTH    add_header Set-Cookie X-OPENHAB-AUTH-HEADER=1;
    
## Secure Certificate Locations
#CERT   ssl_certificate                 CERTPATH;
#CERT   ssl_certificate_key             KEYPATH;

    location / {
        proxy_pass                              http://localhost:8080/;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_read_timeout 3600;

#AUTH        proxy_set_header Authorization "";

## Password Protection
#OH2AUTH       auth_basic                              "Username and Password Required";
#OH2AUTH       auth_basic_user_file                    /etc/nginx/.htpasswd;
    }

## Let's Encrypt webroot location
#WEBROOT   location /.well-known/acme-challenge/ {
#WEBROOT       root                                    /var/www/DOMAINNAME;
#WEBROOT   }
}

# vim: filetype=conf
